# Generated by Django 5.2.1 on 2025-05-29 17:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0002_initial"),
        ("social", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="comment",
            name="author",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to=settings.AUTH_USER_MODEL,
                verbose_name="作者",
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="replies",
                to="social.comment",
                verbose_name="父评论",
            ),
        ),
        migrations.AddField(
            model_name="commentlike",
            name="comment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comment_likes",
                to="social.comment",
                verbose_name="评论",
            ),
        ),
        migrations.AddField(
            model_name="commentlike",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comment_likes",
                to=settings.AUTH_USER_MODEL,
                verbose_name="用户",
            ),
        ),
        migrations.AddField(
            model_name="conversation",
            name="participants",
            field=models.ManyToManyField(
                related_name="conversations",
                to=settings.AUTH_USER_MODEL,
                verbose_name="参与者",
            ),
        ),
        migrations.AddField(
            model_name="follow",
            name="followed",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="followers",
                to=settings.AUTH_USER_MODEL,
                verbose_name="被关注者",
            ),
        ),
        migrations.AddField(
            model_name="follow",
            name="follower",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="following",
                to=settings.AUTH_USER_MODEL,
                verbose_name="关注者",
            ),
        ),
        migrations.AddField(
            model_name="friendship",
            name="from_user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sent_friendships",
                to=settings.AUTH_USER_MODEL,
                verbose_name="发起者",
            ),
        ),
        migrations.AddField(
            model_name="friendship",
            name="to_user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="received_friendships",
                to=settings.AUTH_USER_MODEL,
                verbose_name="接收者",
            ),
        ),
        migrations.AddField(
            model_name="group",
            name="creator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_groups",
                to=settings.AUTH_USER_MODEL,
                verbose_name="创建者",
            ),
        ),
        migrations.AddField(
            model_name="group",
            name="tags",
            field=models.ManyToManyField(
                blank=True, to="core.tag", verbose_name="标签"
            ),
        ),
        migrations.AddField(
            model_name="groupmembership",
            name="group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="memberships",
                to="social.group",
                verbose_name="群组",
            ),
        ),
        migrations.AddField(
            model_name="groupmembership",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="group_memberships",
                to=settings.AUTH_USER_MODEL,
                verbose_name="用户",
            ),
        ),
        migrations.AddField(
            model_name="group",
            name="members",
            field=models.ManyToManyField(
                through="social.GroupMembership",
                to=settings.AUTH_USER_MODEL,
                verbose_name="成员",
            ),
        ),
        migrations.AddField(
            model_name="message",
            name="attachment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="core.attachment",
                verbose_name="附件",
            ),
        ),
        migrations.AddField(
            model_name="message",
            name="conversation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="messages",
                to="social.conversation",
                verbose_name="对话",
            ),
        ),
        migrations.AddField(
            model_name="message",
            name="sender",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sent_messages",
                to=settings.AUTH_USER_MODEL,
                verbose_name="发送者",
            ),
        ),
        migrations.AddField(
            model_name="conversation",
            name="last_message",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="social.message",
                verbose_name="最后消息",
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="recipient",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="social_notifications",
                to=settings.AUTH_USER_MODEL,
                verbose_name="接收者",
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="sender",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="social_sent_notifications",
                to=settings.AUTH_USER_MODEL,
                verbose_name="发送者",
            ),
        ),
        migrations.AddField(
            model_name="post",
            name="attachments",
            field=models.ManyToManyField(
                blank=True, to="core.attachment", verbose_name="附件"
            ),
        ),
        migrations.AddField(
            model_name="post",
            name="author",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="posts",
                to=settings.AUTH_USER_MODEL,
                verbose_name="作者",
            ),
        ),
        migrations.AddField(
            model_name="post",
            name="group",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="posts",
                to="social.group",
                verbose_name="所属群组",
            ),
        ),
        migrations.AddField(
            model_name="post",
            name="tags",
            field=models.ManyToManyField(
                blank=True, to="core.tag", verbose_name="标签"
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="post",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to="social.post",
                verbose_name="动态",
            ),
        ),
        migrations.AddField(
            model_name="postlike",
            name="post",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="likes",
                to="social.post",
                verbose_name="动态",
            ),
        ),
        migrations.AddField(
            model_name="postlike",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="post_likes",
                to=settings.AUTH_USER_MODEL,
                verbose_name="用户",
            ),
        ),
        migrations.AddField(
            model_name="postshare",
            name="post",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="shares",
                to="social.post",
                verbose_name="动态",
            ),
        ),
        migrations.AddField(
            model_name="postshare",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="post_shares",
                to=settings.AUTH_USER_MODEL,
                verbose_name="用户",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="commentlike",
            unique_together={("comment", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="follow",
            unique_together={("follower", "followed")},
        ),
        migrations.AlterUniqueTogether(
            name="friendship",
            unique_together={("from_user", "to_user")},
        ),
        migrations.AlterUniqueTogether(
            name="groupmembership",
            unique_together={("group", "user")},
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["recipient", "is_read"], name="social_noti_recipie_c5fe55_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["recipient", "notification_type"],
                name="social_noti_recipie_98cfe6_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="postlike",
            unique_together={("post", "user")},
        ),
        migrations.AlterUniqueTogether(
            name="postshare",
            unique_together={("post", "user")},
        ),
    ]
