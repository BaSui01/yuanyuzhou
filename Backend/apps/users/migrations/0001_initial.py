# Generated by Django 5.2.1 on 2025-05-29 17:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        unique=True,
                        verbose_name="手机号码",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True, null=True, upload_to="avatars/", verbose_name="头像"
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(blank=True, null=True, verbose_name="出生日期"),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "男性"), ("F", "女性"), ("O", "其他")],
                        max_length=1,
                        null=True,
                        verbose_name="性别",
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True, max_length=500, null=True, verbose_name="个人简介"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="国家"
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="城市"
                    ),
                ),
                (
                    "website",
                    models.URLField(blank=True, null=True, verbose_name="个人网站"),
                ),
                (
                    "github",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="GitHub"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="已验证"),
                ),
                (
                    "is_premium",
                    models.BooleanField(default=False, verbose_name="高级用户"),
                ),
                (
                    "privacy_setting",
                    models.JSONField(blank=True, default=dict, verbose_name="隐私设置"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "last_active",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="最后活跃时间"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户",
                "verbose_name_plural": "用户",
                "db_table": "users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserLoginLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(verbose_name="IP地址")),
                ("user_agent", models.TextField(blank=True, verbose_name="用户代理")),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="登录地点"
                    ),
                ),
                (
                    "device_type",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="设备类型"
                    ),
                ),
                (
                    "login_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="登录时间"),
                ),
                (
                    "is_successful",
                    models.BooleanField(default=True, verbose_name="登录成功"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="login_logs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "登录日志",
                "verbose_name_plural": "登录日志",
                "db_table": "user_login_logs",
                "ordering": ["-login_time"],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        default="zh-hans", max_length=10, verbose_name="语言"
                    ),
                ),
                (
                    "timezone",
                    models.CharField(
                        default="Asia/Shanghai", max_length=50, verbose_name="时区"
                    ),
                ),
                (
                    "theme",
                    models.CharField(
                        choices=[("light", "浅色"), ("dark", "深色"), ("auto", "自动")],
                        default="light",
                        max_length=20,
                        verbose_name="主题",
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(default=True, verbose_name="邮件通知"),
                ),
                (
                    "sms_notifications",
                    models.BooleanField(default=True, verbose_name="短信通知"),
                ),
                (
                    "push_notifications",
                    models.BooleanField(default=True, verbose_name="推送通知"),
                ),
                (
                    "login_count",
                    models.PositiveIntegerField(default=0, verbose_name="登录次数"),
                ),
                ("points", models.PositiveIntegerField(default=0, verbose_name="积分")),
                ("level", models.PositiveIntegerField(default=1, verbose_name="等级")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户档案",
                "verbose_name_plural": "用户档案",
                "db_table": "user_profiles",
            },
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["phone"], name="users_phone_af6883_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["email"], name="users_email_4b85f2_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["is_active"], name="users_is_acti_847b48_idx"),
        ),
        migrations.AddIndex(
            model_name="user",
            index=models.Index(fields=["created_at"], name="users_created_6541e9_idx"),
        ),
        migrations.AddIndex(
            model_name="userloginlog",
            index=models.Index(
                fields=["user", "-login_time"], name="user_login__user_id_a571cd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="userloginlog",
            index=models.Index(
                fields=["ip_address"], name="user_login__ip_addr_c87602_idx"
            ),
        ),
    ]
